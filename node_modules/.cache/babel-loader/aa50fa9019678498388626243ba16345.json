{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robbiezuazua/git/stackstacks/src/components/molecules/DescriptionCta/DescriptionCta.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography } from '@material-ui/core';\n/**\n * Component to display the description with CTA's\n *\n * @param {Object} props\n */\n\nconst DescriptionCta = ({\n  title,\n  subtitle,\n  primaryCta,\n  secondaryCta,\n  align = 'center',\n  className,\n  wrapperProps = {},\n  titleProps = {},\n  subtitleProps = {},\n  buttonGroupProps = {},\n  primaryButtonWrapperProps = {},\n  secondaryButtonWrapperProps = {},\n  ...rest\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const isSm = useMediaQuery(theme.breakpoints.up('sm'), {\n    defaultMatches: true\n  });\n  let justifyGrid = 'center';\n\n  if (align === 'left') {\n    justifyGrid = isSm ? 'flex-end' : 'flex-start';\n  } else if (align === 'right') {\n    justifyGrid = isSm ? 'flex-start' : 'flex-end';\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"space-between\",\n    alignItems: \"center\",\n    className: clsx('description-cta', className),\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: \"description-cta__wrapper\",\n      ...wrapperProps,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: align,\n        gutterBottom: true,\n        className: \"description-cta__title\",\n        ...titleProps,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), subtitle && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        align: align,\n        color: \"textSecondary\",\n        className: \"description-cta__subtitle\",\n        ...subtitleProps,\n        children: subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: justifyGrid || 'center',\n        spacing: 1,\n        className: \"description-cta__button-group\",\n        ...buttonGroupProps,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: \"description-cta__primary-button-wrapper\",\n          ...primaryButtonWrapperProps,\n          children: primaryCta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), secondaryCta && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: clsx('description-cta__secondary-button-wrapper'),\n          ...secondaryButtonWrapperProps,\n          children: secondaryCta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DescriptionCta, \"08v9Dkn8i3H8E/8E0No4aWP5IGw=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = DescriptionCta;\nexport default DescriptionCta;\n\nvar _c;\n\n$RefreshReg$(_c, \"DescriptionCta\");","map":{"version":3,"sources":["/Users/robbiezuazua/git/stackstacks/src/components/molecules/DescriptionCta/DescriptionCta.tsx"],"names":["React","clsx","useTheme","useMediaQuery","Grid","Typography","DescriptionCta","title","subtitle","primaryCta","secondaryCta","align","className","wrapperProps","titleProps","subtitleProps","buttonGroupProps","primaryButtonWrapperProps","secondaryButtonWrapperProps","rest","theme","isSm","breakpoints","up","defaultMatches","justifyGrid"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,aAAT,EAAwBC,IAAxB,EAA8BC,UAA9B,QAAgD,mBAAhD;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,KADsB;AAEtBC,EAAAA,QAFsB;AAGtBC,EAAAA,UAHsB;AAItBC,EAAAA,YAJsB;AAKtBC,EAAAA,KAAK,GAAG,QALc;AAMtBC,EAAAA,SANsB;AAOtBC,EAAAA,YAAY,GAAG,EAPO;AAQtBC,EAAAA,UAAU,GAAG,EARS;AAStBC,EAAAA,aAAa,GAAG,EATM;AAUtBC,EAAAA,gBAAgB,GAAG,EAVG;AAWtBC,EAAAA,yBAAyB,GAAG,EAXN;AAYtBC,EAAAA,2BAA2B,GAAG,EAZR;AAatB,KAAGC;AAbmB,CAAD,KAciB;AAAA;;AACtC,QAAMC,KAAK,GAAGlB,QAAQ,EAAtB;AACA,QAAMmB,IAAI,GAAGlB,aAAa,CAACiB,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,EAA6B;AACrDC,IAAAA,cAAc,EAAE;AADqC,GAA7B,CAA1B;AAIA,MAAIC,WAAmH,GAAG,QAA1H;;AACA,MAAId,KAAK,KAAK,MAAd,EAAsB;AACpBc,IAAAA,WAAW,GAAGJ,IAAI,GAAG,UAAH,GAAgB,YAAlC;AACD,GAFD,MAEO,IAAIV,KAAK,KAAK,OAAd,EAAuB;AAC5Bc,IAAAA,WAAW,GAAGJ,IAAI,GAAG,YAAH,GAAkB,UAApC;AACD;;AAED,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAE,CAFX;AAGE,IAAA,OAAO,EAAC,eAHV;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,SAAS,EAAEpB,IAAI,CAAC,iBAAD,EAAoBW,SAApB,CALjB;AAAA,OAMMO,IANN;AAAA,4BAQE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,EAAC,0BAArB;AAAA,SAAoDN,YAApD;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,OAAO,EAAC,IADV;AAEE,QAAA,KAAK,EAAEF,KAFT;AAGE,QAAA,YAAY,MAHd;AAIE,QAAA,SAAS,EAAC,wBAJZ;AAAA,WAKMG,UALN;AAAA,kBAOGP;AAPH;AAAA;AAAA;AAAA;AAAA,cADF,EAUGC,QAAQ,iBACP,QAAC,UAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAEG,KAFT;AAGE,QAAA,KAAK,EAAC,eAHR;AAIE,QAAA,SAAS,EAAC,2BAJZ;AAAA,WAKMI,aALN;AAAA,kBAOGP;AAPH;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eA8BE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAEiB,WAAW,IAAI,QAF1B;AAGE,QAAA,OAAO,EAAE,CAHX;AAIE,QAAA,SAAS,EAAC,+BAJZ;AAAA,WAKMT,gBALN;AAAA,gCAOE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,SAAS,EAAC,yCAFZ;AAAA,aAGMC,yBAHN;AAAA,oBAKGR;AALH;AAAA;AAAA;AAAA;AAAA,gBAPF,EAcGC,YAAY,iBACX,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,SAAS,EAAET,IAAI,CAAC,2CAAD,CAFjB;AAAA,aAGMiB,2BAHN;AAAA,oBAKGR;AALH;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2DD,CAtFD;;GAAMJ,c;UAeUJ,Q,EACDC,a;;;KAhBTG,c;AAwFN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography } from '@material-ui/core';\n\n/**\n * Component to display the description with CTA's\n *\n * @param {Object} props\n */\nconst DescriptionCta = ({\n  title,\n  subtitle,\n  primaryCta,\n  secondaryCta,\n  align = 'center',\n  className,\n  wrapperProps = {},\n  titleProps = {},\n  subtitleProps = {},\n  buttonGroupProps = {},\n  primaryButtonWrapperProps = {},\n  secondaryButtonWrapperProps = {},\n  ...rest\n}: DescriptionCtaProps): JSX.Element => {\n  const theme = useTheme();\n  const isSm = useMediaQuery(theme.breakpoints.up('sm'), {\n    defaultMatches: true,\n  });\n\n  let justifyGrid: ('center' | 'flex-start' | 'flex-end' | 'space-between' | 'space-around' | 'space-evenly' | undefined) = 'center';\n  if (align === 'left') {\n    justifyGrid = isSm ? 'flex-end' : 'flex-start';\n  } else if (align === 'right') {\n    justifyGrid = isSm ? 'flex-start' : 'flex-end';\n  }\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      justify=\"space-between\"\n      alignItems=\"center\"\n      className={clsx('description-cta', className)}\n      {...rest}\n    >\n      <Grid item className=\"description-cta__wrapper\" {...wrapperProps}>\n        <Typography\n          variant=\"h5\"\n          align={align}\n          gutterBottom\n          className=\"description-cta__title\"\n          {...titleProps}\n        >\n          {title}\n        </Typography>\n        {subtitle && (\n          <Typography\n            variant=\"subtitle1\"\n            align={align}\n            color=\"textSecondary\"\n            className=\"description-cta__subtitle\"\n            {...subtitleProps}\n          >\n            {subtitle}\n          </Typography>\n        )}\n      </Grid>\n      <Grid item>\n        <Grid\n          container\n          justify={justifyGrid || 'center'}\n          spacing={1}\n          className=\"description-cta__button-group\"\n          {...buttonGroupProps}\n        >\n          <Grid\n            item\n            className=\"description-cta__primary-button-wrapper\"\n            {...primaryButtonWrapperProps}\n          >\n            {primaryCta}\n          </Grid>\n          {secondaryCta && (\n            <Grid\n              item\n              className={clsx('description-cta__secondary-button-wrapper')}\n              {...secondaryButtonWrapperProps}\n            >\n              {secondaryCta}\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DescriptionCta;\n"]},"metadata":{},"sourceType":"module"}