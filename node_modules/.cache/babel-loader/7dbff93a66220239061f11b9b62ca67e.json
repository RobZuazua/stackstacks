{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robbiezuazua/git/stackstacks/src/components/organisms/Map/Map.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    width: '100%',\n    height: '100%'\n  }\n}));\n/**\n * Component to display the map\n *\n * @param {Object} props\n */\n\nconst Map = ({\n  zoom = 10,\n  center = [0, 0],\n  pins,\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  React.useEffect(() => {\n    const L = require('leaflet');\n\n    delete L.Icon.Default.prototype._getIconUrl;\n\n    const markerIcon2x = require('assets/images/leaflet-assets/marker-icon-2x.png');\n\n    const markerIcon = require('assets/images/leaflet-assets/marker-icon.png');\n\n    const markerShadow = require('assets/images/leaflet-assets/marker-shadow.png');\n\n    L.Icon.Default.mergeOptions({\n      iconRetinaUrl: typeof markerIcon2x === 'object' ? markerIcon2x.default : markerIcon2x,\n      iconUrl: typeof markerIcon === 'object' ? markerIcon.default : markerIcon,\n      shadowUrl: typeof markerShadow === 'object' ? markerShadow.default : markerShadow\n    });\n  });\n\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const ReactMap = require('react-leaflet').Map;\n\n  const TileLayer = require('react-leaflet').TileLayer;\n\n  const Marker = require('react-leaflet').Marker;\n\n  return /*#__PURE__*/_jsxDEV(ReactMap, {\n    zoom: zoom,\n    center: center,\n    className: clsx('map', classes.root, className),\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      className: \"map__tile-layer\",\n      detectRetina: true,\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), pins && pins.length && pins.map((item, i) => /*#__PURE__*/_jsxDEV(Marker, {\n      className: \"map__marker\",\n      position: [item.location.y, item.location.x]\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"OAQf9SHEQQsOOZKjohcuI3tGtQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/robbiezuazua/git/stackstacks/src/components/organisms/Map/Map.tsx"],"names":["React","clsx","makeStyles","useStyles","root","position","top","left","right","bottom","width","height","Map","zoom","center","pins","className","rest","classes","useEffect","L","require","Icon","Default","prototype","_getIconUrl","markerIcon2x","markerIcon","markerShadow","mergeOptions","iconRetinaUrl","default","iconUrl","shadowUrl","window","ReactMap","TileLayer","Marker","length","map","item","i","location","y","x"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    width: '100%',\n    height: '100%',\n  },\n}));\n\n/**\n * Component to display the map\n *\n * @param {Object} props\n */\nconst Map = ({ zoom = 10, center = [0, 0], pins, className, ...rest }: MapProps): JSX.Element | null => {\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    const L = require('leaflet');\n    delete L.Icon.Default.prototype._getIconUrl;\n\n    const markerIcon2x = require('assets/images/leaflet-assets/marker-icon-2x.png');\n    const markerIcon = require('assets/images/leaflet-assets/marker-icon.png');\n    const markerShadow = require('assets/images/leaflet-assets/marker-shadow.png');\n\n    L.Icon.Default.mergeOptions({\n      iconRetinaUrl: typeof markerIcon2x === 'object' ? markerIcon2x.default : markerIcon2x,\n      iconUrl: typeof markerIcon === 'object' ? markerIcon.default : markerIcon,\n      shadowUrl: typeof markerShadow === 'object' ? markerShadow.default : markerShadow,\n    });\n  });\n\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const ReactMap = require('react-leaflet').Map;\n  const TileLayer = require('react-leaflet').TileLayer;\n  const Marker = require('react-leaflet').Marker;\n\n  return (\n    <ReactMap\n      zoom={zoom}\n      center={center}\n      className={clsx('map', classes.root, className)}\n      {...rest}\n    >\n      <TileLayer\n        className=\"map__tile-layer\"\n        detectRetina={true}\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {pins &&\n        pins.length &&\n        pins.map((item, i) => (\n          <Marker\n            className=\"map__marker\"\n            position={[item.location.y, item.location.x]}\n            key={i}\n          />\n        ))}\n    </ReactMap>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}