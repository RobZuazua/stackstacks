{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robbiezuazua/git/stackstacks/src/components/organisms/SectionAlternate/SectionAlternate.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: theme.palette.alternate.main\n  },\n  inner: {\n    maxWidth: theme.layout.contentWidth,\n    width: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(6, 2),\n    [theme.breakpoints.up('sm')]: {\n      padding: theme.spacing(8, 8)\n    },\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(12, 8)\n    }\n  },\n  innerNarrowed: {\n    maxWidth: 800\n  }\n}));\n/**\n * Component to display the alternative sections\n *\n * @param {Object} props\n */\n\nconst SectionAlternate = ({\n  children,\n  innerNarrowed,\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: clsx('section-alternate', classes.root, className),\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx('section-alternate__content', classes.inner, innerNarrowed ? classes.innerNarrowed : {}),\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SectionAlternate, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SectionAlternate;\nexport default SectionAlternate;\n\nvar _c;\n\n$RefreshReg$(_c, \"SectionAlternate\");","map":{"version":3,"sources":["/Users/robbiezuazua/git/stackstacks/src/components/organisms/SectionAlternate/SectionAlternate.tsx"],"names":["React","clsx","makeStyles","useStyles","theme","root","background","palette","alternate","main","inner","maxWidth","layout","contentWidth","width","margin","padding","spacing","breakpoints","up","innerNarrowed","SectionAlternate","children","className","rest","classes"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAcC,SAAd,CAAwBC;AADhC,GAD+B;AAIrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAEP,KAAK,CAACQ,MAAN,CAAaC,YADlB;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,MAAM,EAAE,QAHH;AAILC,IAAAA,OAAO,EAAEZ,KAAK,CAACa,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAJJ;AAKL,KAACb,KAAK,CAACc,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BH,MAAAA,OAAO,EAAEZ,KAAK,CAACa,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADmB,KALzB;AAQL,KAACb,KAAK,CAACc,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BH,MAAAA,OAAO,EAAEZ,KAAK,CAACa,OAAN,CAAc,EAAd,EAAkB,CAAlB;AADmB;AARzB,GAJ8B;AAgBrCG,EAAAA,aAAa,EAAE;AACbT,IAAAA,QAAQ,EAAE;AADG;AAhBsB,CAAL,CAAN,CAA5B;AAqBA;AACA;AACA;AACA;AACA;;AACA,MAAMU,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYF,EAAAA,aAAZ;AAA2BG,EAAAA,SAA3B;AAAsC,KAAGC;AAAzC,CAAD,KAAyF;AAAA;;AAChH,QAAMC,OAAO,GAAGtB,SAAS,EAAzB;AAEA,sBACE;AACE,IAAA,SAAS,EAAEF,IAAI,CAAC,mBAAD,EAAsBwB,OAAO,CAACpB,IAA9B,EAAoCkB,SAApC,CADjB;AAAA,OAEMC,IAFN;AAAA,2BAIE;AACE,MAAA,SAAS,EAAEvB,IAAI,CACb,4BADa,EAEbwB,OAAO,CAACf,KAFK,EAGbU,aAAa,GAAGK,OAAO,CAACL,aAAX,GAA2B,EAH3B,CADjB;AAAA,gBAOGE;AAPH;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnBD;;GAAMD,gB;UACYlB,S;;;KADZkB,gB;AAqBN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: theme.palette.alternate.main,\n  },\n  inner: {\n    maxWidth: theme.layout.contentWidth,\n    width: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(6, 2),\n    [theme.breakpoints.up('sm')]: {\n      padding: theme.spacing(8, 8),\n    },\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(12, 8),\n    },\n  },\n  innerNarrowed: {\n    maxWidth: 800,\n  },\n}));\n\n/**\n * Component to display the alternative sections\n *\n * @param {Object} props\n */\nconst SectionAlternate = ({ children, innerNarrowed, className, ...rest }: SectionAlternateProps): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <section\n      className={clsx('section-alternate', classes.root, className)}\n      {...rest}\n    >\n      <div\n        className={clsx(\n          'section-alternate__content',\n          classes.inner,\n          innerNarrowed ? classes.innerNarrowed : {},\n        )}\n      >\n        {children}\n      </div>\n    </section>\n  );\n};\n\nexport default SectionAlternate;\n"]},"metadata":{},"sourceType":"module"}