{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robbiezuazua/git/stackstacks/src/components/atoms/Image/Image.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    height: '100%'\n  },\n  dBlock: {\n    display: 'block'\n  }\n}));\n/**\n * Component to display the images\n *\n * @param {Object} props\n */\n\nconst Image = ({\n  src,\n  srcSet,\n  alt = '...',\n  lazy = true,\n  lazyProps = {\n    width: 'auto',\n    height: 'auto'\n  },\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  if (lazy) {\n    return /*#__PURE__*/_jsxDEV(LazyLoadImage, {\n      className: clsx('image', classes.root, classes.dBlock, className),\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      effect: \"opacity\",\n      ...lazyProps,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    className: clsx('image', classes.root, className),\n    alt: alt,\n    src: src,\n    srcSet: srcSet,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Image, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Image;\nexport default Image;\n\nvar _c;\n\n$RefreshReg$(_c, \"Image\");","map":{"version":3,"sources":["/Users/robbiezuazua/git/stackstacks/src/components/atoms/Image/Image.tsx"],"names":["React","clsx","makeStyles","LazyLoadImage","useStyles","root","width","height","dBlock","display","Image","src","srcSet","alt","lazy","lazyProps","className","rest","classes"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,QAA8B,iCAA9B;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC,OAAO;AAClCG,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GAD4B;AAKlCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH;AAL0B,CAAP,CAAD,CAA5B;AAUA;AACA;AACA;AACA;AACA;;AACA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,GADa;AAEbC,EAAAA,MAFa;AAGbC,EAAAA,GAAG,GAAG,KAHO;AAIbC,EAAAA,IAAI,GAAG,IAJM;AAKbC,EAAAA,SAAS,GAAG;AACVT,IAAAA,KAAK,EAAE,MADG;AAEVC,IAAAA,MAAM,EAAE;AAFE,GALC;AASbS,EAAAA,SATa;AAUb,KAAGC;AAVU,CAAD,KAWkB;AAAA;;AAE9B,QAAMC,OAAO,GAAGd,SAAS,EAAzB;;AACA,MAAIU,IAAJ,EAAU;AACR,wBACE,QAAC,aAAD;AACE,MAAA,SAAS,EAAEb,IAAI,CAAC,OAAD,EAAUiB,OAAO,CAACb,IAAlB,EAAwBa,OAAO,CAACV,MAAhC,EAAwCQ,SAAxC,CADjB;AAEE,MAAA,GAAG,EAAEH,GAFP;AAGE,MAAA,GAAG,EAAEF,GAHP;AAIE,MAAA,MAAM,EAAEC,MAJV;AAKE,MAAA,MAAM,EAAC,SALT;AAAA,SAMMG,SANN;AAAA,SAOME;AAPN;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAED,sBACE;AACE,IAAA,SAAS,EAAEhB,IAAI,CAAC,OAAD,EAAUiB,OAAO,CAACb,IAAlB,EAAwBW,SAAxB,CADjB;AAEE,IAAA,GAAG,EAAEH,GAFP;AAGE,IAAA,GAAG,EAAEF,GAHP;AAIE,IAAA,MAAM,EAAEC,MAJV;AAAA,OAKMK;AALN;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CArCD;;GAAMP,K;UAaYN,S;;;KAbZM,K;AAuCN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    height: '100%',\n  },\n  dBlock: {\n    display: 'block',\n  },\n}));\n\n/**\n * Component to display the images\n *\n * @param {Object} props\n */\nconst Image = ({\n  src,\n  srcSet,\n  alt = '...',\n  lazy = true,\n  lazyProps = {\n    width: 'auto',\n    height: 'auto',\n  },\n  className,\n  ...rest\n}: ImageProps): JSX.Element  => {\n\n  const classes = useStyles();\n  if (lazy) {\n    return (\n      <LazyLoadImage\n        className={clsx('image', classes.root, classes.dBlock, className)}\n        alt={alt}\n        src={src}\n        srcSet={srcSet}\n        effect=\"opacity\"\n        {...lazyProps}\n        {...rest}\n      />\n    );\n  }\n\n  return (\n    <img\n      className={clsx('image', classes.root, className)}\n      alt={alt}\n      src={src}\n      srcSet={srcSet}\n      {...rest}\n    />\n  );\n};\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}