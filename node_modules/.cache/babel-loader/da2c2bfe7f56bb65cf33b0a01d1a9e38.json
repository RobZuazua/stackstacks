{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robbiezuazua/git/stackstacks/src/views/Expo/components/Gallery/Gallery.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, GridList, GridListTile } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nconst useStyles = makeStyles(() => ({\n  image: {\n    objectFit: 'cover'\n  }\n}));\n\nconst Gallery = ({\n  data,\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      cellHeight: isMd ? 300 : 100,\n      cols: 4,\n      spacing: 0,\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(GridListTile, {\n        cols: item.cols || 1,\n        children: /*#__PURE__*/_jsxDEV(Image, { ...item.image,\n          alt: item.title,\n          lazyProps: {\n            width: '100%',\n            height: '100%'\n          },\n          className: classes.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Gallery, \"9025em9jOQdmzpWvV0plUgcVqs8=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/robbiezuazua/git/stackstacks/src/views/Expo/components/Gallery/Gallery.tsx"],"names":["React","makeStyles","useTheme","useMediaQuery","GridList","GridListTile","Image","useStyles","image","objectFit","Gallery","data","className","rest","classes","theme","isMd","breakpoints","up","defaultMatches","map","item","index","cols","title","width","height"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,YAAlC,QAAsD,mBAAtD;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAC,OAAO;AAClCO,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN;AAD2B,CAAP,CAAD,CAA5B;;AAMA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmB,KAAGC;AAAtB,CAAD,KAAmE;AAAA;;AACjF,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AAEA,QAAMQ,KAAK,GAAGb,QAAQ,EAAtB;AACA,QAAMc,IAAI,GAAGb,aAAa,CAACY,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,EAA6B;AACrDC,IAAAA,cAAc,EAAE;AADqC,GAA7B,CAA1B;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEP,SAAhB;AAAA,OAA+BC,IAA/B;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEG,IAAI,GAAG,GAAH,GAAS,GAAnC;AAAwC,MAAA,IAAI,EAAE,CAA9C;AAAiD,MAAA,OAAO,EAAE,CAA1D;AAAA,gBACGL,IAAI,CAACS,GAAL,CAAS,CAACC,IAAD,EAAYC,KAAZ,kBACR,QAAC,YAAD;AAA0B,QAAA,IAAI,EAAED,IAAI,CAACE,IAAL,IAAa,CAA7C;AAAA,+BACE,QAAC,KAAD,OACMF,IAAI,CAACb,KADX;AAEE,UAAA,GAAG,EAAEa,IAAI,CAACG,KAFZ;AAGE,UAAA,SAAS,EAAE;AAAEC,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,MAAM,EAAE;AAAzB,WAHb;AAIE,UAAA,SAAS,EAAEZ,OAAO,CAACN;AAJrB;AAAA;AAAA;AAAA;AAAA;AADF,SAAmBc,KAAnB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAxBD;;GAAMZ,O;UACYH,S,EAEFL,Q,EACDC,a;;;KAJTO,O;AA0BN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, GridList, GridListTile } from '@material-ui/core';\n\nimport { Image } from 'components/atoms';\n\nconst useStyles = makeStyles(() => ({\n  image: {\n    objectFit: 'cover',\n  },\n}));\n\nconst Gallery = ({ data, className, ...rest }: ViewComponentProps): JSX.Element => {\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      <GridList cellHeight={isMd ? 300 : 100} cols={4} spacing={0}>\n        {data.map((item: any, index: number) => (\n          <GridListTile key={index} cols={item.cols || 1}>\n            <Image\n              {...item.image}\n              alt={item.title}\n              lazyProps={{ width: '100%', height: '100%' }}\n              className={classes.image}\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}