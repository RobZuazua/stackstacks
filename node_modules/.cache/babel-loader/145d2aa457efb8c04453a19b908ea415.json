{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robbiezuazua/git/stackstacks/src/components/molecules/IconAlternate/IconAlternate.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar } from '@material-ui/core';\nimport { Icon } from 'components/atoms';\nconst useStyles = makeStyles(theme => ({\n  extraSmall: {\n    width: 20,\n    height: 20\n  },\n  small: {\n    width: 50,\n    height: 50\n  },\n  medium: {\n    width: 70,\n    height: 70\n  },\n  large: {\n    width: 90,\n    height: 90\n  },\n  circle: {\n    borderRadius: '100%'\n  },\n  square: {\n    borderRadius: theme.spacing(2)\n  }\n}));\n/**\n * Component to display the alternate icon\n *\n * @param {Object} props\n */\n\nconst IconAlternate = ({\n  iconProps,\n  fontIconClass,\n  size = 'medium',\n  color = [],\n  shape = 'square',\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const useBackgroundStyles = makeStyles(() => ({\n    background: {\n      background: color[50]\n    }\n  }));\n  const backgroundClasses = useBackgroundStyles();\n  return /*#__PURE__*/_jsxDEV(Avatar, {\n    className: clsx('icon-alternate', classes[size], classes[shape], backgroundClasses.background, className),\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Icon, {\n      size: size,\n      fontIconClass: fontIconClass,\n      fontIconColor: color[500],\n      className: \"icon-alternate__icon\",\n      ...iconProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IconAlternate, \"EG7NUaIg5pui/ibNdW6B1/+aAto=\", true, function () {\n  return [useStyles];\n});\n\n_c = IconAlternate;\nexport default IconAlternate;\n\nvar _c;\n\n$RefreshReg$(_c, \"IconAlternate\");","map":{"version":3,"sources":["/Users/robbiezuazua/git/stackstacks/src/components/molecules/IconAlternate/IconAlternate.tsx"],"names":["React","clsx","makeStyles","Avatar","Icon","useStyles","theme","extraSmall","width","height","small","medium","large","circle","borderRadius","square","spacing","IconAlternate","iconProps","fontIconClass","size","color","shape","className","rest","classes","useBackgroundStyles","background","backgroundClasses"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,MAAM,EAAE;AAFE,GADyB;AAKrCC,EAAAA,KAAK,EAAE;AACLF,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,MAAM,EAAE;AAFH,GAL8B;AASrCE,EAAAA,MAAM,EAAE;AACNH,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE;AAFF,GAT6B;AAarCG,EAAAA,KAAK,EAAE;AACLJ,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,MAAM,EAAE;AAFH,GAb8B;AAiBrCI,EAAAA,MAAM,EAAE;AACNC,IAAAA,YAAY,EAAE;AADR,GAjB6B;AAoBrCC,EAAAA,MAAM,EAAE;AACND,IAAAA,YAAY,EAAER,KAAK,CAACU,OAAN,CAAc,CAAd;AADR;AApB6B,CAAL,CAAN,CAA5B;AAyBA;AACA;AACA;AACA;AACA;;AACA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,SADqB;AAErBC,EAAAA,aAFqB;AAGrBC,EAAAA,IAAI,GAAG,QAHc;AAIrBC,EAAAA,KAAK,GAAG,EAJa;AAKrBC,EAAAA,KAAK,GAAG,QALa;AAMrBC,EAAAA,SANqB;AAOrB,KAAGC;AAPkB,CAAD,KAQiB;AAAA;;AACrC,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AACA,QAAMqB,mBAAmB,GAAGxB,UAAU,CAAC,OAAO;AAC5CyB,IAAAA,UAAU,EAAE;AACVA,MAAAA,UAAU,EAAEN,KAAK,CAAC,EAAD;AADP;AADgC,GAAP,CAAD,CAAtC;AAKA,QAAMO,iBAAiB,GAAGF,mBAAmB,EAA7C;AAEA,sBACE,QAAC,MAAD;AACE,IAAA,SAAS,EAAEzB,IAAI,CACb,gBADa,EAEbwB,OAAO,CAACL,IAAD,CAFM,EAGbK,OAAO,CAACH,KAAD,CAHM,EAIbM,iBAAiB,CAACD,UAJL,EAKbJ,SALa,CADjB;AAAA,OAQMC,IARN;AAAA,2BAUE,QAAC,IAAD;AACE,MAAA,IAAI,EAAEJ,IADR;AAEE,MAAA,aAAa,EAAED,aAFjB;AAGE,MAAA,aAAa,EAAEE,KAAK,CAAC,GAAD,CAHtB;AAIE,MAAA,SAAS,EAAC,sBAJZ;AAAA,SAKMH;AALN;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArCD;;GAAMD,a;UASYZ,S;;;KATZY,a;AAuCN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar } from '@material-ui/core';\nimport { Icon } from 'components/atoms';\n\nconst useStyles = makeStyles(theme => ({\n  extraSmall: {\n    width: 20,\n    height: 20,\n  },\n  small: {\n    width: 50,\n    height: 50,\n  },\n  medium: {\n    width: 70,\n    height: 70,\n  },\n  large: {\n    width: 90,\n    height: 90,\n  },\n  circle: {\n    borderRadius: '100%',\n  },\n  square: {\n    borderRadius: theme.spacing(2),\n  },\n}));\n\n/**\n * Component to display the alternate icon\n *\n * @param {Object} props\n */\nconst IconAlternate = ({\n  iconProps,\n  fontIconClass,\n  size = 'medium',\n  color = [],\n  shape = 'square',\n  className,\n  ...rest\n}: IconAlternateProps): JSX.Element => {\n  const classes = useStyles();\n  const useBackgroundStyles = makeStyles(() => ({\n    background: {\n      background: color[50],\n    },\n  }));\n  const backgroundClasses = useBackgroundStyles();\n\n  return (\n    <Avatar\n      className={clsx(\n        'icon-alternate',\n        classes[size],\n        classes[shape],\n        backgroundClasses.background,\n        className,\n      )}\n      {...rest}\n    >\n      <Icon\n        size={size}\n        fontIconClass={fontIconClass}\n        fontIconColor={color[500]}\n        className=\"icon-alternate__icon\"\n        {...iconProps}\n      />\n    </Avatar>\n  );\n};\n\nexport default IconAlternate;\n"]},"metadata":{},"sourceType":"module"}