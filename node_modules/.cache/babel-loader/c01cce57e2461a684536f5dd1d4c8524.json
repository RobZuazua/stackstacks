{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robbiezuazua/git/stackstacks/src/components/organisms/CardCategoryLink/CardCategoryLink.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, IconButton } from '@material-ui/core';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport { IconAlternate } from 'components/molecules';\nimport { CardBase } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%'\n  },\n  fontWeight700: {\n    fontWeight: 700\n  },\n  categoryIconButton: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'flex-end'\n  }\n}));\n/**\n * Component to display the category link card\n *\n * @param {Object} props\n */\n\nconst CardCategoryLink = ({\n  fontIconClass,\n  color,\n  title,\n  subtitle,\n  href = '#',\n  align = 'left',\n  className,\n  iconAlternateProps = {},\n  titleProps = {},\n  subtitleProps = {},\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  let justifyGrid = 'flex-start';\n\n  if (align === 'center') {\n    justifyGrid = 'center';\n  } else if (align === 'right') {\n    justifyGrid = 'flex-end';\n  }\n\n  return /*#__PURE__*/_jsxDEV(CardBase, {\n    className: clsx('card-category-link', classes.root, className),\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        className: \"card-category-link__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          justify: justifyGrid,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(IconAlternate, {\n            fontIconClass: fontIconClass,\n            color: color,\n            size: \"medium\",\n            ...iconAlternateProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: align,\n            className: classes.fontWeight700,\n            ...titleProps,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), subtitle && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            align: align,\n            color: \"textSecondary\",\n            ...subtitleProps,\n            children: subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: href,\n        className: clsx('card-category-link__item', classes.categoryIconButton),\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          className: \"card-category-link__icon-button\",\n          children: /*#__PURE__*/_jsxDEV(ArrowRightAltIcon, {\n            className: \"card-category-link__icon\",\n            style: {\n              color: color[500]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardCategoryLink, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CardCategoryLink;\nexport default CardCategoryLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardCategoryLink\");","map":{"version":3,"sources":["/Users/robbiezuazua/git/stackstacks/src/components/organisms/CardCategoryLink/CardCategoryLink.tsx"],"names":["React","clsx","makeStyles","Grid","Typography","IconButton","ArrowRightAltIcon","IconAlternate","CardBase","useStyles","theme","root","height","width","fontWeight700","fontWeight","categoryIconButton","display","justifyContent","CardCategoryLink","fontIconClass","color","title","subtitle","href","align","className","iconAlternateProps","titleProps","subtitleProps","rest","classes","justifyGrid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, IconButton } from '@material-ui/core';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport { IconAlternate } from 'components/molecules';\nimport { CardBase } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%',\n  },\n  fontWeight700: {\n    fontWeight: 700,\n  },\n  categoryIconButton: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'flex-end',\n  },\n}));\n\n/**\n * Component to display the category link card\n *\n * @param {Object} props\n */\nconst CardCategoryLink = ({\n  fontIconClass,\n  color,\n  title,\n  subtitle,\n  href = '#',\n  align = 'left',\n  className,\n  iconAlternateProps = {},\n  titleProps = {},\n  subtitleProps = {},\n  ...rest\n}: CardCategoryLinkProps): JSX.Element => {\n  const classes = useStyles();\n\n  let justifyGrid: ('center' | 'flex-start' | 'flex-end' | 'space-between' | 'space-around' | 'space-evenly' | undefined) = 'flex-start';\n  if (align === 'center') {\n    justifyGrid = 'center';\n  } else if (align === 'right') {\n    justifyGrid = 'flex-end';\n  }\n  return (\n    <CardBase\n      className={clsx('card-category-link', classes.root, className)}\n      {...rest}\n    >\n      <>\n      <Grid container spacing={2} className=\"card-category-link__wrapper\">\n        <Grid item container justify={justifyGrid} xs={12}>\n          <IconAlternate\n            fontIconClass={fontIconClass}\n            color={color}\n            size=\"medium\"\n            {...iconAlternateProps}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"h6\"\n            align={align}\n            className={classes.fontWeight700}\n            {...titleProps}\n          >\n            {title}\n          </Typography>\n        </Grid>\n        {subtitle && (\n          <Grid item xs={12}>\n            <Typography\n              variant=\"subtitle1\"\n              align={align}\n              color=\"textSecondary\"\n              {...subtitleProps}\n            >\n              {subtitle}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n      <a\n        href={href}\n        className={clsx('card-category-link__item', classes.categoryIconButton)}\n      >\n        <IconButton className=\"card-category-link__icon-button\">\n          <ArrowRightAltIcon\n            className=\"card-category-link__icon\"\n            style={{ color: color[500] }}\n          />\n        </IconButton>\n      </a>\n      </>\n    </CardBase>\n  );\n};\n\nexport default CardCategoryLink;\n"]},"metadata":{},"sourceType":"module"}