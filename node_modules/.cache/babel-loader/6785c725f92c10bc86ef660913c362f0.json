{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robbiezuazua/git/stackstacks/src/components/molecules/CountUpNumber/CountUpNumber.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport VisibilitySensor from 'react-visibility-sensor';\nimport CountUp from 'react-countup';\nimport clsx from 'clsx';\nimport { Typography } from '@material-ui/core';\n/**\n * Component to display the Count Up Numbers\n *\n * @param {Object} props\n */\n\nconst CountUpNumber = ({\n  start = 0,\n  end,\n  suffix,\n  prefix,\n  label,\n  textColor,\n  labelColor,\n  className,\n  visibilitySensorProps = {},\n  wrapperProps = {},\n  countWrapperProps = {},\n  countNumberProps = {},\n  labelProps = {},\n  ...rest\n}) => {\n  _s();\n\n  const [viewPortEntered, setViewPortEntered] = React.useState(false);\n\n  const setViewPortVisibility = isVisible => {\n    if (viewPortEntered) {\n      return;\n    }\n\n    setViewPortEntered(isVisible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx('countup-number', className),\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(VisibilitySensor, {\n      onChange: isVisible => setViewPortVisibility(isVisible),\n      delayedCall: true,\n      ...visibilitySensorProps,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countup-number__wrapper\",\n        ...wrapperProps,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          align: \"center\",\n          color: textColor || 'textPrimary',\n          className: \"countup-number__count-wrapper\",\n          ...countWrapperProps,\n          children: /*#__PURE__*/_jsxDEV(CountUp, {\n            delay: 1,\n            redraw: false,\n            end: viewPortEntered ? end : start,\n            start: start,\n            suffix: suffix || '',\n            prefix: prefix || '',\n            className: \"countup-number__count\",\n            ...countNumberProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: labelColor || 'textSecondary',\n          align: \"center\",\n          className: \"countup-number__label\",\n          ...labelProps,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CountUpNumber, \"8AKg4UTEcuAm2yS5CsLyRzCMCDY=\");\n\n_c = CountUpNumber;\nexport default CountUpNumber;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountUpNumber\");","map":{"version":3,"sources":["/Users/robbiezuazua/git/stackstacks/src/components/molecules/CountUpNumber/CountUpNumber.tsx"],"names":["React","VisibilitySensor","CountUp","clsx","Typography","CountUpNumber","start","end","suffix","prefix","label","textColor","labelColor","className","visibilitySensorProps","wrapperProps","countWrapperProps","countNumberProps","labelProps","rest","viewPortEntered","setViewPortEntered","useState","setViewPortVisibility","isVisible"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,KAAK,GAAG,CADa;AAErBC,EAAAA,GAFqB;AAGrBC,EAAAA,MAHqB;AAIrBC,EAAAA,MAJqB;AAKrBC,EAAAA,KALqB;AAMrBC,EAAAA,SANqB;AAOrBC,EAAAA,UAPqB;AAQrBC,EAAAA,SARqB;AASrBC,EAAAA,qBAAqB,GAAG,EATH;AAUrBC,EAAAA,YAAY,GAAG,EAVM;AAWrBC,EAAAA,iBAAiB,GAAG,EAXC;AAYrBC,EAAAA,gBAAgB,GAAG,EAZE;AAarBC,EAAAA,UAAU,GAAG,EAbQ;AAcrB,KAAGC;AAdkB,CAAD,KAeiB;AAAA;;AACrC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCrB,KAAK,CAACsB,QAAN,CAAwB,KAAxB,CAA9C;;AACA,QAAMC,qBAAqB,GAAIC,SAAD,IAAwB;AACpD,QAAIJ,eAAJ,EAAqB;AACnB;AACD;;AAEDC,IAAAA,kBAAkB,CAACG,SAAD,CAAlB;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAErB,IAAI,CAAC,gBAAD,EAAmBU,SAAnB,CAApB;AAAA,OAAuDM,IAAvD;AAAA,2BACE,QAAC,gBAAD;AACE,MAAA,QAAQ,EAAEK,SAAS,IAAID,qBAAqB,CAACC,SAAD,CAD9C;AAEE,MAAA,WAAW,MAFb;AAAA,SAGMV,qBAHN;AAAA,6BAKE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,WAA6CC,YAA7C;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,OAAO,EAAC,IADV;AAEE,UAAA,YAAY,MAFd;AAGE,UAAA,KAAK,EAAC,QAHR;AAIE,UAAA,KAAK,EAAEJ,SAAS,IAAI,aAJtB;AAKE,UAAA,SAAS,EAAC,+BALZ;AAAA,aAMMK,iBANN;AAAA,iCAQE,QAAC,OAAD;AACE,YAAA,KAAK,EAAE,CADT;AAEE,YAAA,MAAM,EAAE,KAFV;AAGE,YAAA,GAAG,EAAEI,eAAe,GAAGb,GAAH,GAASD,KAH/B;AAIE,YAAA,KAAK,EAAEA,KAJT;AAKE,YAAA,MAAM,EAAEE,MAAM,IAAI,EALpB;AAME,YAAA,MAAM,EAAEC,MAAM,IAAI,EANpB;AAOE,YAAA,SAAS,EAAC,uBAPZ;AAAA,eAQMQ;AARN;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,gBADF,eAoBE,QAAC,UAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAEL,UAAU,IAAI,eAFvB;AAGE,UAAA,KAAK,EAAC,QAHR;AAIE,UAAA,SAAS,EAAC,uBAJZ;AAAA,aAKMM,UALN;AAAA,oBAOGR;AAPH;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CAjED;;GAAML,a;;KAAAA,a;AAmEN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport VisibilitySensor from 'react-visibility-sensor';\nimport CountUp from 'react-countup';\nimport clsx from 'clsx';\nimport { Typography } from '@material-ui/core';\n\n/**\n * Component to display the Count Up Numbers\n *\n * @param {Object} props\n */\nconst CountUpNumber = ({\n  start = 0,\n  end,\n  suffix,\n  prefix,\n  label,\n  textColor,\n  labelColor,\n  className,\n  visibilitySensorProps = {},\n  wrapperProps = {},\n  countWrapperProps = {},\n  countNumberProps = {},\n  labelProps = {},\n  ...rest\n}: CountUpNumberProps): JSX.Element => {\n  const [viewPortEntered, setViewPortEntered] = React.useState<boolean>(false);\n  const setViewPortVisibility = (isVisible: boolean) => {\n    if (viewPortEntered) {\n      return;\n    }\n\n    setViewPortEntered(isVisible);\n  };\n\n  return (\n    <div className={clsx('countup-number', className)} {...rest}>\n      <VisibilitySensor\n        onChange={isVisible => setViewPortVisibility(isVisible)}\n        delayedCall\n        {...visibilitySensorProps}\n      >\n        <div className=\"countup-number__wrapper\" {...wrapperProps}>\n          <Typography\n            variant=\"h4\"\n            gutterBottom\n            align=\"center\"\n            color={textColor || 'textPrimary'}\n            className=\"countup-number__count-wrapper\"\n            {...countWrapperProps}\n          >\n            <CountUp\n              delay={1}\n              redraw={false}\n              end={viewPortEntered ? end : start}\n              start={start}\n              suffix={suffix || ''}\n              prefix={prefix || ''}\n              className=\"countup-number__count\"\n              {...countNumberProps}\n            />\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            color={labelColor || 'textSecondary'}\n            align=\"center\"\n            className=\"countup-number__label\"\n            {...labelProps}\n          >\n            {label}\n          </Typography>\n        </div>\n      </VisibilitySensor>\n    </div>\n  );\n};\n\nexport default CountUpNumber;\n"]},"metadata":{},"sourceType":"module"}