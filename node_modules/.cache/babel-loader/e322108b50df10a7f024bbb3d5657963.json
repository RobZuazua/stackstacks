{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robbiezuazua/git/stackstacks/src/views/DesktopApp/components/Reviews/Reviews.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, ListItem, ListItemAvatar, ListItemText, Avatar, Typography } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    background: 'transparent',\n    width: 60,\n    height: 60\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Reviews = ({\n  data,\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: isMd ? 4 : 2,\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        \"data-aos\": \"fade-up\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              disableGutters: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                className: classes.listItemAvatar,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: item.logo,\n                  className: classes.avatar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: item.title,\n                primaryTypographyProps: {\n                  variant: 'h5'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"p\",\n              color: \"textSecondary\",\n              children: [\"\\\"\", item.feedback, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              disableGutters: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: item.city,\n                secondary: \"TheFront User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reviews, \"9025em9jOQdmzpWvV0plUgcVqs8=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["/Users/robbiezuazua/git/stackstacks/src/views/DesktopApp/components/Reviews/Reviews.tsx"],"names":["React","makeStyles","useTheme","useMediaQuery","Grid","ListItem","ListItemAvatar","ListItemText","Avatar","Typography","useStyles","theme","avatar","background","width","height","listItemAvatar","marginRight","spacing","Reviews","data","className","rest","classes","isMd","breakpoints","up","defaultMatches","map","item","index","logo","title","variant","feedback","city"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Typography,\n} from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    background: 'transparent',\n    width: 60,\n    height: 60,\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst Reviews = ({ data, className, ...rest }: ViewComponentProps): JSX.Element => {\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      <Grid container spacing={isMd ? 4 : 2}>\n        {data.map((item: any, index: number) => (\n          <Grid item xs={12} sm={6} key={index} data-aos=\"fade-up\">\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <ListItem disableGutters>\n                  <ListItemAvatar className={classes.listItemAvatar}>\n                    <Avatar src={item.logo} className={classes.avatar} />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={item.title}\n                    primaryTypographyProps={{\n                      variant: 'h5',\n                    }}\n                  />\n                </ListItem>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"h6\" component=\"p\" color=\"textSecondary\">\n                  \"{item.feedback}\"\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <ListItem disableGutters>\n                  <ListItemText primary={item.city} secondary=\"TheFront User\" />\n                </ListItem>\n              </Grid>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}