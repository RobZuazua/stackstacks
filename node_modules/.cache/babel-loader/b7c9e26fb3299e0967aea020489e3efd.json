{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robbiezuazua/git/stackstacks/src/components/organisms/CardJob/CardJob.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, ListItem, ListItemAvatar, Avatar, ListItemText } from '@material-ui/core';\nimport { CardBase } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%'\n  },\n  dot: {\n    display: 'inline-block',\n    width: theme.spacing(1),\n    height: theme.spacing(1),\n    background: theme.palette.text.primary,\n    borderRadius: '100%',\n    marginRight: theme.spacing(1)\n  },\n  dotBig: {\n    width: theme.spacing(2),\n    height: theme.spacing(2)\n  },\n  dotSmall: {\n    width: theme.spacing(1 / 2),\n    height: theme.spacing(1 / 2)\n  },\n  jobTitle: {\n    fontWeight: 700\n  },\n  dotMargin: {\n    margin: theme.spacing(0, 1)\n  }\n}));\n/**\n * Component to display the job card\n *\n * @param {Object} props\n */\n\nconst CardJob = ({\n  badgeColor,\n  badgeTitle,\n  jobTitle,\n  jobLocation,\n  jobType,\n  jobDate,\n  companyLogo,\n  companyName,\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(CardBase, {\n    className: clsx('card-job', classes.root, className),\n    align: \"left\",\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          alignItems: \"center\",\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: clsx(classes.dot, classes.dotBig),\n            style: {\n              background: badgeColor\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            variant: \"body2\",\n            color: \"textPrimary\",\n            children: badgeTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.jobTitle,\n            children: jobTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          alignItems: \"center\",\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            variant: \"subtitle1\",\n            color: \"textSecondary\",\n            children: jobLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: clsx(classes.dot, classes.dotSmall, classes.dotMargin)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            variant: \"subtitle1\",\n            color: \"textSecondary\",\n            children: jobType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: companyLogo,\n            alt: companyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: companyName,\n          secondary: jobDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardJob, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CardJob;\nexport default CardJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardJob\");","map":{"version":3,"sources":["/Users/robbiezuazua/git/stackstacks/src/components/organisms/CardJob/CardJob.tsx"],"names":["React","clsx","makeStyles","Grid","Typography","ListItem","ListItemAvatar","Avatar","ListItemText","CardBase","useStyles","theme","root","height","width","dot","display","spacing","background","palette","text","primary","borderRadius","marginRight","dotBig","dotSmall","jobTitle","fontWeight","dotMargin","margin","CardJob","badgeColor","badgeTitle","jobLocation","jobType","jobDate","companyLogo","companyName","className","rest","classes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,cAJF,EAKEC,MALF,EAMEC,YANF,QAOO,mBAPP;AAQA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAACS,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,MADJ;AAEJC,IAAAA,KAAK,EAAE;AAFH,GAD+B;AAKrCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE,cADN;AAEHF,IAAAA,KAAK,EAAEH,KAAK,CAACM,OAAN,CAAc,CAAd,CAFJ;AAGHJ,IAAAA,MAAM,EAAEF,KAAK,CAACM,OAAN,CAAc,CAAd,CAHL;AAIHC,IAAAA,UAAU,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC,OAJ5B;AAKHC,IAAAA,YAAY,EAAE,MALX;AAMHC,IAAAA,WAAW,EAAEZ,KAAK,CAACM,OAAN,CAAc,CAAd;AANV,GALgC;AAarCO,EAAAA,MAAM,EAAE;AACNV,IAAAA,KAAK,EAAEH,KAAK,CAACM,OAAN,CAAc,CAAd,CADD;AAENJ,IAAAA,MAAM,EAAEF,KAAK,CAACM,OAAN,CAAc,CAAd;AAFF,GAb6B;AAiBrCQ,EAAAA,QAAQ,EAAE;AACRX,IAAAA,KAAK,EAAEH,KAAK,CAACM,OAAN,CAAc,IAAI,CAAlB,CADC;AAERJ,IAAAA,MAAM,EAAEF,KAAK,CAACM,OAAN,CAAc,IAAI,CAAlB;AAFA,GAjB2B;AAqBrCS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE;AADJ,GArB2B;AAwBrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAElB,KAAK,CAACM,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADC;AAxB0B,CAAL,CAAN,CAA5B;AA6BA;AACA;AACA;AACA;AACA;;AACA,MAAMa,OAAO,GAAG,CAAC;AACfC,EAAAA,UADe;AAEfC,EAAAA,UAFe;AAGfN,EAAAA,QAHe;AAIfO,EAAAA,WAJe;AAKfC,EAAAA,OALe;AAMfC,EAAAA,OANe;AAOfC,EAAAA,WAPe;AAQfC,EAAAA,WARe;AASfC,EAAAA,SATe;AAUf,KAAGC;AAVY,CAAD,KAWiB;AAAA;;AAC/B,QAAMC,OAAO,GAAG9B,SAAS,EAAzB;AAEA,sBACE,QAAC,QAAD;AACE,IAAA,SAAS,EAAET,IAAI,CAAC,UAAD,EAAauC,OAAO,CAAC5B,IAArB,EAA2B0B,SAA3B,CADjB;AAEE,IAAA,KAAK,EAAC,MAFR;AAAA,OAGMC,IAHN;AAAA,2BAKE;AAAA,8BACA,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,SAAS,MAApB;AAAqB,UAAA,UAAU,EAAC,QAAhC;AAAyC,UAAA,EAAE,EAAE,EAA7C;AAAA,kCACE;AACE,YAAA,SAAS,EAAEtC,IAAI,CAACuC,OAAO,CAACzB,GAAT,EAAcyB,OAAO,CAAChB,MAAtB,CADjB;AAEE,YAAA,KAAK,EAAE;AAAEN,cAAAA,UAAU,EAAEa;AAAd;AAFT;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,OAAO,EAAC,OAArC;AAA6C,YAAA,KAAK,EAAC,aAAnD;AAAA,sBACGC;AADH;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,SAAS,EAAEQ,OAAO,CAACd,QAA5C;AAAA,sBACGA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAiBA,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,SAAS,MAApB;AAAqB,UAAA,UAAU,EAAC,QAAhC;AAAyC,UAAA,EAAE,EAAE,EAA7C;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,SAAS,EAAC,MADZ;AAEE,YAAA,OAAO,EAAC,WAFV;AAGE,YAAA,KAAK,EAAC,eAHR;AAAA,sBAKGO;AALH;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AACE,YAAA,SAAS,EAAEhC,IAAI,CAACuC,OAAO,CAACzB,GAAT,EAAcyB,OAAO,CAACf,QAAtB,EAAgCe,OAAO,CAACZ,SAAxC;AADjB;AAAA;AAAA;AAAA;AAAA,kBARF,eAWE,QAAC,UAAD;AACE,YAAA,SAAS,EAAC,MADZ;AAEE,YAAA,OAAO,EAAC,WAFV;AAGE,YAAA,KAAK,EAAC,eAHR;AAAA,sBAKGM;AALH;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBA,eAsCA,QAAC,QAAD;AAAU,QAAA,cAAc,MAAxB;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAEE,WAAb;AAA0B,YAAA,GAAG,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEA,WAAvB;AAAoC,UAAA,SAAS,EAAEF;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD,CAnED;;GAAML,O;UAYYpB,S;;;KAZZoB,O;AAqEN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Typography,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n} from '@material-ui/core';\nimport { CardBase } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%',\n  },\n  dot: {\n    display: 'inline-block',\n    width: theme.spacing(1),\n    height: theme.spacing(1),\n    background: theme.palette.text.primary,\n    borderRadius: '100%',\n    marginRight: theme.spacing(1),\n  },\n  dotBig: {\n    width: theme.spacing(2),\n    height: theme.spacing(2),\n  },\n  dotSmall: {\n    width: theme.spacing(1 / 2),\n    height: theme.spacing(1 / 2),\n  },\n  jobTitle: {\n    fontWeight: 700,\n  },\n  dotMargin: {\n    margin: theme.spacing(0, 1),\n  },\n}));\n\n/**\n * Component to display the job card\n *\n * @param {Object} props\n */\nconst CardJob = ({\n  badgeColor,\n  badgeTitle,\n  jobTitle,\n  jobLocation,\n  jobType,\n  jobDate,\n  companyLogo,\n  companyName,\n  className,\n  ...rest\n}: CardJobProps): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <CardBase\n      className={clsx('card-job', classes.root, className)}\n      align=\"left\"\n      {...rest}\n    >\n      <>\n      <Grid container spacing={2}>\n        <Grid item container alignItems=\"center\" xs={12}>\n          <span\n            className={clsx(classes.dot, classes.dotBig)}\n            style={{ background: badgeColor }}\n          />\n          <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\n            {badgeTitle}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" className={classes.jobTitle}>\n            {jobTitle}\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item container alignItems=\"center\" xs={12}>\n          <Typography\n            component=\"span\"\n            variant=\"subtitle1\"\n            color=\"textSecondary\"\n          >\n            {jobLocation}\n          </Typography>\n          <span\n            className={clsx(classes.dot, classes.dotSmall, classes.dotMargin)}\n          />\n          <Typography\n            component=\"span\"\n            variant=\"subtitle1\"\n            color=\"textSecondary\"\n          >\n            {jobType}\n          </Typography>\n        </Grid>\n      </Grid>\n      <ListItem disableGutters>\n        <ListItemAvatar>\n          <Avatar src={companyLogo} alt={companyName} />\n        </ListItemAvatar>\n        <ListItemText primary={companyName} secondary={jobDate} />\n      </ListItem>\n      </>\n    </CardBase>\n  );\n};\n\nexport default CardJob;\n"]},"metadata":{},"sourceType":"module"}