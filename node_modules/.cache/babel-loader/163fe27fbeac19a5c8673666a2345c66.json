{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robbiezuazua/git/stackstacks/src/layouts/DocsLayout/components/Navbar/components/NavItem/NavItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { parse } from 'query-string';\nimport { Typography, ListItem, makeStyles } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  item: {\n    display: 'flex',\n    textTransform: 'none',\n    width: '100%',\n    color: theme.palette.text.primary,\n    '&:hover': {\n      background: 'transparent',\n      color: theme.palette.primary.main\n    }\n  },\n  itemActive: {\n    color: theme.palette.primary.main,\n    '& span': {\n      fontWeight: 700\n    }\n  }\n}));\n\nconst getComponentId = () => parse(window.location.search).component || 'introduction';\n\n;\n\nconst NavItem = ({\n  className,\n  href,\n  title,\n  id,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    className: clsx(classes.item, getComponentId() === id ? classes.itemActive : '', className),\n    component: 'a',\n    href: href,\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      component: \"span\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavItem, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NavItem;\nexport default NavItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavItem\");","map":{"version":3,"sources":["/Users/robbiezuazua/git/stackstacks/src/layouts/DocsLayout/components/Navbar/components/NavItem/NavItem.tsx"],"names":["React","clsx","parse","Typography","ListItem","makeStyles","useStyles","theme","item","display","textTransform","width","color","palette","text","primary","background","main","itemActive","fontWeight","getComponentId","window","location","search","component","NavItem","className","href","title","id","rest","classes"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,UAA/B,QAAiD,mBAAjD;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,MAFX;AAGJC,IAAAA,KAAK,EAAE,MAHH;AAIJC,IAAAA,KAAK,EAAEL,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmBC,OAJtB;AAKJ,eAAW;AACTC,MAAAA,UAAU,EAAE,aADH;AAETJ,MAAAA,KAAK,EAAEL,KAAK,CAACM,OAAN,CAAcE,OAAd,CAAsBE;AAFpB;AALP,GAD+B;AAWrCC,EAAAA,UAAU,EAAE;AACVN,IAAAA,KAAK,EAAEL,KAAK,CAACM,OAAN,CAAcE,OAAd,CAAsBE,IADnB;AAEV,cAAU;AACRE,MAAAA,UAAU,EAAE;AADJ;AAFA;AAXyB,CAAL,CAAN,CAA5B;;AAmBA,MAAMC,cAAc,GAAG,MAAMlB,KAAK,CAACmB,MAAM,CAACC,QAAP,CAAgBC,MAAjB,CAAL,CAA8BC,SAA9B,IAA2C,cAAxE;;AAOC;;AAED,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,SADe;AAEfC,EAAAA,IAFe;AAGfC,EAAAA,KAHe;AAIfC,EAAAA,EAJe;AAKf,KAAGC;AALY,CAAD,KAMU;AAAA;;AACxB,QAAMC,OAAO,GAAGzB,SAAS,EAAzB;AAEA,sBACE,QAAC,QAAD;AACE,IAAA,SAAS,EAAEL,IAAI,CACb8B,OAAO,CAACvB,IADK,EAEbY,cAAc,OAAOS,EAArB,GAA0BE,OAAO,CAACb,UAAlC,GAA+C,EAFlC,EAGbQ,SAHa,CADjB;AAME,IAAA,SAAS,EAAE,GANb;AAOE,IAAA,IAAI,EAAEC,IAPR;AAAA,OAQMG,IARN;AAAA,2BAUE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,SAAS,EAAC,MAAtC;AAAA,gBAA8CF;AAA9C;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvBD;;GAAMH,O;UAOYnB,S;;;KAPZmB,O;AAyBN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { parse } from 'query-string';\nimport { Typography, ListItem, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    display: 'flex',\n    textTransform: 'none',\n    width: '100%',\n    color: theme.palette.text.primary,\n    '&:hover': {\n      background: 'transparent',\n      color: theme.palette.primary.main,\n    }\n  },\n  itemActive: {\n    color: theme.palette.primary.main,\n    '& span': {\n      fontWeight: 700,\n    },\n  },\n}));\n\nconst getComponentId = () => parse(window.location.search).component || 'introduction';\n\ninterface Props {\n  className?: string;\n  href: string;\n  title: string;\n  id: string;\n};\n\nconst NavItem = ({\n  className,\n  href,\n  title,\n  id,\n  ...rest\n}: Props): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(\n        classes.item,\n        getComponentId() === id ? classes.itemActive : '',\n        className,\n      )}\n      component={'a'}\n      href={href}\n      {...rest}\n    >\n      <Typography variant=\"body2\" component=\"span\">{title}</Typography>\n    </ListItem>\n  );\n};\n\nexport default NavItem;"]},"metadata":{},"sourceType":"module"}